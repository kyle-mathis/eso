local LAM2 = LibStub("LibAddonMenu-2.0")

function AI.CreateConfigMenu()
    local panelData = {
         type = "panel",
         name = "|c8080FFAwesome Info|r",
		 registerForRefresh  = true,
		 registerForDefaults = true,
		 author = "CrazyDutchGuy",
		 version = "|c60FF60" .. AI.version .. "|r",
    }
	
	LAM2:RegisterAddonPanel("|c45D7F7Awesome Info|r", panelData)
	
	local panelOptions = {
		{
			type = "description",
			text = "There are many ways you can customise your AI experience, so don't forget to scroll down the options page.",
		},
		{
			type = "header",
			name = "|c45D7F7General Options|r",
		},
		{
			type = "checkbox", 
			name = "Unlock Window", 
			tooltip = "UnLocks the window so it can be moved.", 
			getFunc = function() return AI.vars.windowLocked end, 
			setFunc = function(newValue) 
				AI.vars.windowLocked = newValue 
				AwesomeInfo:SetMovable(newValue) 
			end, 
			default = AI.defaults.windowLocked, 
		},
		{
			type = "dropdown",
			name = "Text alignment", 
			tooltip = "The alignment of all text within the add-on.",
			getFunc = function() return AI.vars.textAlign end,
			setFunc = function(newValue) AI.vars.textAlign = newValue end,
			choices = {"LEFT","CENTER","RIGHT"},
			setFunc = function(newValue) AI.SetTextAlign(newValue) end,
			getFunc = function() return AI.vars.textAlign end,
			default = AI.defaults.textAlign,
		},		
		{
			type = "slider",
			name = "UI scale", 
			tooltip = "Set the scale of the UI.",
			min  = 5,
			max = 15,
			getFunc = function() return 10 * AI.vars.scaling end,
			setFunc = function(newValue) AI.vars.scaling = newValue / 10; AwesomeInfo:SetScale(AI.vars.scaling) end,
			default = 10 * AI.defaults.scaling,
		},
		{
			type = "header",
			name = "|c45D7F7Clock Options|r",
		},		
		{
			type = "checkbox",
			name = "Show clock", 
			tooltip = "Display the clock.",
			getFunc = function() return AI.vars.clockShow end,
			setFunc = function(newValue) AI.vars.clockShow = newValue end,
			default = AI.defaults.clockShow,
		},
		{
			type = "checkbox",
			name = "Clock format - 24 hour", 
			tooltip = "Display the clock in 24-hour/military format or in 12-hour AM/PM.",
			getFunc = function() return AI.vars.clock24 end,
			setFunc = function(newValue) AI.vars.clock24 = newValue end,
			default = AI.defaults.clock24,
			disabled = function() return not(AI.vars.clockShow) end,
		},
		{
			type = "slider",
			name = "Clock spacing", 
			tooltip = "Set the gap between the clock and the rest of the notifications",
			min  = 0,
			max = 30,
			getFunc = function() return AI.vars.clockSpace end,
			setFunc = function(newValue) AI.vars.clockSpace = newValue end,
			disabled = function() return not(AI.vars.clockShow) end,
			default = AI.defaults.clockSpace,
		},
		{
			type = "header",
			name = "|c45D7F7Attributes & Skill Points|r",
		},
		{   
			type = "checkbox", 
			name = "Show undistributed skill points", 
			tooltip = "Display counts of unspent skill and attribute points.", 
			getFunc = function() return AI.vars.skillsShow end, 
			setFunc = function(newValue) AI.vars.skillsShow = newValue; AI.OnSkillsChange() end, 
			default = AI.defaults.skillsShow, 
		},
		{
			type = "checkbox",
			name = "Show timer for Blacksmithing", 
			tooltip = "Display a countdown timer when your Blacksmithing research is nearly complete. Adjust the threshold below.",
			getFunc = function() return AI.vars.resSmithShow[AI.characterName] end,
			setFunc = function(newValue) AI.vars.resSmithShow[AI.characterName] = newValue; AI.UpdateResearch() end,
			default = true,
		},
		{
			type = "checkbox",
			name = "Show timer for Clothing", 
			tooltip = "Display a countdown timer when your Clothing research is nearly complete. Adjust the threshold below.",
			getFunc = function() return AI.vars.resClothShow[AI.characterName] end,
			setFunc = function(newValue) AI.vars.resClothShow[AI.characterName] = newValue; AI.UpdateResearch() end,
			default = true,
		},
		{
			type = "checkbox",
			name = "Show timer for Woodworking", 
			tooltip = "Display a countdown timer when your Woodworking research is nearly complete. Adjust the threshold below.",
			getFunc = function() return AI.vars.resWoodShow[AI.characterName] end,
			setFunc = function(newValue) AI.vars.resWoodShow[AI.characterName] = newValue; AI.UpdateResearch() end,
			default = true,			
		},
		{
			type = "slider",
			name = "Research warning timer (minutes)", 
			tooltip = "Will show the countdown warning timer if any research completes within this many minutes.",
			min  = 0,
			max = 480,
			getFunc = function() return AI.vars.resWarning end,
			setFunc = function(newValue) AI.vars.resWarning = newValue; AI.UpdateResearch() end,
			default = AI.defaults.resWarning,
			disabled = function() return not(AI.vars.resSmithShow[AI.characterName] or AI.vars.resClothShow[AI.characterName] or AI.vars.resWoodShow[AI.characterName]) end,			
		},	
		{
			type = "header",
			name = "|c45D7F7Low Bag Space Warnings|r",
		},	
		{
			type = "checkbox",
			name = "Show warning for low bag space", 
			tooltip = "Display a warning when your bag space falls below the warning and critical values set below.",
			getFunc = function() return AI.vars.bagsShow end,
			setFunc = function(newValue) AI.vars.bagsShow = newValue; AI.UpdateResearch() end,
			default = AI.defaults.bagsShow,			
		},
		{
			type = "slider",
			name = "Bag space |cFFFF60warning|r", 
			tooltip = "If remaining bag space is this many or less, you will see a warning",
			min  = 1,
			max = 20,
			getFunc = function() return AI.vars.bagsWarn end,
			setFunc = function(newValue) AI.vars.bagsWarn = newValue; AI.OnInventorySlotUpdate() end,
			disabled = function() return not(AI.vars.bagsShow) end,
			default = AI.defaults.bagsWarn,
		},	
		{
			type = "slider",
			name = "Bag space |cFF6060critical warning|r", 
			tooltip = "If remaining bag space is this many or less, you will see a critical warning.",
			min  = 1,
			max = 10,
			getFunc = function() return AI.vars.bagsCritical end,
			setFunc = function(newValue) AI.vars.bagsCritical = newValue; AI.OnInventorySlotUpdate() end,
			disabled = function() return not(AI.vars.bagsShow) end,
			default = AI.defaults.bagsCritical,
		},
		{
			type = "header",
			name = "|c45D7F7Low Durability Warnings|r",
		},
		{
			type = "checkbox",
			name = "Show warning for low durability", 
			tooltip = "Display a warning when your armour durability falls below the warning and critical values set below.",
			getFunc = function() return AI.vars.duraShow end,
			setFunc = function(newValue) AI.vars.duraShow = newValue end,
			default = AI.defaults.duraShow,			
		},
		{
			type = "slider",
			name = "Durability |cFFFF60warning|r %", 
			tooltip = "If durability of one of your equipped items is this many or less, you will see a warning.",
			min  = 1,
			max = 60,
			getFunc = function() return AI.vars.duraWarning end,
			setFunc = function(newValue) AI.vars.duraWarning = newValue; AI.UpdateDurability() end,
			disabled = function() return not(AI.vars.duraShow) end,
			default = AI.defaults.duraWarning,				
		},
		{
			type = "slider",
			name = "Durability |cFF6060critical warning|r %", 
			tooltip = "If durability of one of your equipped items is this many or less, you will see a critical warning.",
			min  = 1,
			max = 40,
			getFunc = function() return AI.vars.duraCritical end,
			setFunc = function(newValue) AI.vars.duraCritical = newValue; AI.UpdateDurability() end,
			disabled = function() return not(AI.vars.duraShow) end,
			default = AI.defaults.duraCritical,	
		},	
		{
			type = "header",
			name = "|c45D7F7Low Weapon Charge Warnings|r",
		},
		{
			type = "checkbox",
			name = "Show warning for low Weapon Charge", 
			tooltip = "Display a warning when the charge on your weapon enchantment falls below the warning and critical values set below.",
			getFunc = function() return AI.vars.weaponShow end,
			setFunc = function(newValue) AI.vars.weaponShow = newValue end,
			default = AI.defaults.weaponShow,				
		},
		{
			type = "slider",
			name = "Weapon Charge |cFFFF60warning|r %", 
			tooltip = "If durability of one of your equipped items is this many or less, you will see a warning.",
			min  = 1,
			max = 60,
			default = 20,
			getFunc = function() return AI.vars.weaponWarning end,
			setFunc = function(newValue) AI.vars.weaponWarning = newValue; AI.UpdateWeaponCharge() end,
			disabled = function() return not(AI.vars.weaponShow) end,
			default = AI.defaults.weaponWarning,			
		},
		{
			type = "slider",
			name = "Weapon Charge |cFF6060critical warning|r %", 
			tooltip = "If durability of one of your equipped items is this many or less, you will see a critical warning.",
			min  = 1,
			max = 40,
			default = 5,
			getFunc = function() return AI.vars.weaponCritical end,
			setFunc = function(newValue) AI.vars.weaponCritical = newValue; AI.UpdateWeaponCharge() end,
			disabled = function() return not(AI.vars.weaponShow) end,
			default = AI.defaults.weaponCritical,				
		},	
		{
			type = "header",
			name = "|c45D7F7Mount Training Timer|r",
		},
		{
			type = "checkbox",
			name = "Show timer for mount training", 
			tooltip = "Display a countdown timer when you are near to being able to train your mount. Adjust the threshold below.",
			getFunc = function() return AI.vars.horseShow end,
			setFunc = function(newValue) AI.vars.horseShow = newValue; AI.UpdateMountInfo() end,
			default = AI.defaults.horseShow,				
		},
		{
			type = "slider",
			name = "Start training timer (minutes)", 
			tooltip = "Will show the countdown timer if mount can be trained within the number of minutes below.",
			min  = 1,
			max = 1200,
			default = 60,
			getFunc = function() return AI.vars.horseWarning end,
			setFunc = function(newValue) AI.vars.horseWarning = newValue; AI.UpdateMountInfo() end,
			disabled = function() return not(AI.vars.horseShow) end,
			default = AI.defaults.horseWarning,				
		},
		{
			type = "header",
			name = "|c45D7F7Shard Hunting Warnings|r",
		},	
		{
			type = "checkbox",
			name = "Show warning for 2 shard missing", 
			tooltip = "Display a warning when you miss 2 shards.",
			getFunc = function() return AI.vars.shard2Show end,
			setFunc = function(newValue) AI.vars.shard2Show = newValue; AI.OnSkillsChange() end,
			default = AI.defaults.shard2Show,			
		},
		{
			type = "checkbox",
			name = "Show warning for 1 shard missing", 
			tooltip = "Display a warning when you miss 1 shards.",
			getFunc = function() return AI.vars.shard1Show end,
			setFunc = function(newValue) AI.vars.shard1Show = newValue; AI.OnSkillsChange() end,
			default = AI.defaults.shard1Show,			
		},
		{
			type = "header",
			name = "|c45D7F7Fence and Bounty Warnings|r",
		},
		{
			type = "checkbox",
			name = "Show warnings for fences and bounty", 
			tooltip = "Display fences and bounty warnings, you can enable each function individually below.",
			getFunc = function() return AI.vars.fenceShow end,
			setFunc = function(newValue) AI.vars.fenceShow = newValue end,
			default = AI.defaults.fenceShow,				
		},
		{
			type = "checkbox",
			name = "Show warning for low sells", 
			tooltip = "Display a warning when the number of sells remaining falls below the warning and critical values set below.",
			getFunc = function() return AI.vars.sellShow end,
			setFunc = function(newValue) AI.vars.sellShow = newValue end,
			disabled = function() return not(AI.vars.fenceShow) end,
			default = AI.defaults.sellShow,				
		},
		{
			type = "slider",
			name = "Sells remaining |cFFFF60warning|r", 
			tooltip = "If the number of sells left is this many or less, you will see a warning.",
			min  = 1,
			max = 50,
			getFunc = function() return AI.vars.sellWarning end,
			setFunc = function(newValue) AI.vars.sellWarning = newValue end,
			disabled = function() return not(AI.vars.sellShow and AI.vars.fenceShow) end,
			default = AI.defaults.sellWarning,			
		},
		{
			type = "slider",
			name = "Sells remaining |cFF6060critical warning|r", 
			tooltip = "If the number of sells remaining is this many or less, you will see a critical warning.",
			min  = 1,
			max = 50,
			getFunc = function() return AI.vars.sellCritical end,
			setFunc = function(newValue) AI.vars.sellCritical = newValue; AI.UpdateWeaponCharge() end,
			disabled = function() return not(AI.vars.sellShow and AI.vars.fenceShow) end,
			default = AI.defaults.sellCritical,				
		},
		{
			type = "checkbox",
			name = "Show warning for low launders", 
			tooltip = "Display a warning when the number of launders remaining falls below the warning and critical values set below.",
			getFunc = function() return AI.vars.launderShow end,
			setFunc = function(newValue) AI.vars.launderShow = newValue end,
			disabled = function() return not(AI.vars.fenceShow) end,
			default = AI.defaults.launderShow,				
		},
		{
			type = "slider",
			name = "Launders remaining |cFFFF60warning|r", 
			tooltip = "If the number of launders left is this many or less, you will see a warning.",
			min  = 1,
			max = 50,
			getFunc = function() return AI.vars.launderWarning end,
			setFunc = function(newValue) AI.vars.launderWarning = newValue end,
			disabled = function() return not(AI.vars.launderShow and AI.vars.fenceShow) end,
			default = AI.defaults.launderWarning,			
		},
		{
			type = "slider",
			name = "Launders remaining |cFF6060critical warning|r", 
			tooltip = "If the number of launders remaining is this many or less, you will see a critical warning.",
			min  = 1,
			max = 50,
			getFunc = function() return AI.vars.launderCritical end,
			setFunc = function(newValue) AI.vars.launderCritical = newValue; AI.UpdateWeaponCharge() end,
			disabled = function() return not(AI.vars.launderShow and AI.vars.fenceShow) end,
			default = AI.defaults.launderCritical,				
		},
	}

	LAM2:RegisterOptionControls("|c45D7F7Awesome Info|r", panelOptions)

end -- AI.CreateConfigMenu

